name: Azure Static Web Apps CI/CD with SonarCloud

on:
  push:
    branches: [develop]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [develop]

jobs:
  sonarcloud_analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './my-app'  # ¡CAMBIAR ESTO por tu ruta real!
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=Santiago-Cordoba_BombermanARSW-Front \
            -Dsonar.organization=santiago-cordoba \
            -Dsonar.branch.name=develop \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.sources=src

  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    needs: sonarcloud_analysis
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install OIDC Client
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROUD_COAST_02662DD0F }}
          action: "upload"
          app_location: "./my-app"  # Asegúrate que coincida con tu estructura
          output_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
